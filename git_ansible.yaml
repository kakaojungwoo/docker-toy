---
- name: Git Test # 플레이북의 이름을 지정
  hosts: localhost #작업을 실행할 대상 호스트를 지정
  become: yes # 플레이북을 관리자 권한으로 실행
  vars: # 변수 정의
    git_repo_url: "https://github.com/kakaojungwoo/docker-toy.git"
    local_repo_path: "/var/www/html/ansiblelab3"
    webserver_document_root: "/var/www/html"
    web_service_name: "httpd"
    trigger_file_path: "/tmp/ansiblelab3_trigger.txt"

  tasks: #작업 목록
  - name: httpd installation # 작업의 이름
      yum: # 'yum' 모듈을 사용하여 httpd 패키지 설치
        name: "{{ web_service_name }}" # 상기 변수 명 httpd
        state: present #상태 http를 설치해라
      when: ansible_distribution == 'CentOS' #when 조건문, Centos 일때만 실행

    - name: Clone or pull Git repository # 작업의 이름
      git: #'git' 모듈을 사용한다.
        repo: "{{ git_repo_url }}" #깃 레파지토리 경로 지정
        dest: "{{ local_repo_path }}" #로컬 저장소 위치
        force: yes #깃 저장소를 강제로 업데이트(변경사항이 없는 경우에도 업데이트 함)
      register: git_result # 실행 결과를 등록한다.

    - name: Restart http if Git repository changes
      systemd: #시스템의 서비스 관리와 관련된 작업 수행 ex.systemctl
        name: "{{ web_service_name }}"
        state: restarted #서비스 상태 지정
      when: git_result.changed #git 저장소에 변경이 있을 경우 웹서버를 재시작한다.

    - name: Create trigger file for debugging
      copy: #파일이나 디렉토리 복사 모듈, 디버깅을 위해 변경사항 발생 시 트리거 파일을 생성한다.
        content: "Git repository has been updated." #생성할 파일의 내용을 지정한다.
        dest: "{{ trigger_file_path }}"

    - name: Display trigger file content for debugging
      debug: # 트리거 파일의 내용을 디버깅 목적으로 표시한다.
        msg: "Trigger File Content: {{ lookup('file', trigger_file_path) }}" #표시할 디버그 메시지를 지정한다.
